openapi: 3.0.0
info:
  title: neo-direct
  version: '1.0'
  contact:
    name: Valentin Dufois
    email: vdufois@neo-ooh.com
  description: The Neo Direct API provides access for reading and updating content on Neo-ooh advertising network.
servers:
  - url: 'https://api.neo-direct.neo-ooh.info/v1'
    description: prod
  - url: 'https://dev.api.neo-direct.neo-ooh.info/v1'
    description: dev
paths:
  /campaigns:
    get:
      summary: Get all campaigns
      tags:
        - campaigns
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Campaign.v1.yaml
        '401':
          description: Unauthorized
      operationId: get-campaigns
      description: List all the campaigns the current user can access.
    post:
      summary: Create a new campaign
      tags:
        - campaigns
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Campaign.v1.yaml
        '401':
          description: Unauthorized
      operationId: post-campaigns
      description: Create a new campaign.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                content_limit:
                  type: integer
                display_duration:
                  type: number
                format:
                  type: integer
                medias:
                  type: array
                  items:
                    type: integer
                start_date:
                  type: string
                end_date:
                  type: string
              required:
                - name
                - content_limit
                - display_duration
                - format
                - medias
                - start_date
                - end_date
        description: ''
  '/campaigns/{campaign-id}':
    parameters:
      - schema:
          type: string
        name: campaign-id
        in: path
        required: true
    get:
      summary: Get a campaign
      tags:
        - campaigns
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Campaign.v1.yaml
        '401':
          description: Unauthorized
      operationId: get-campaign
      description: "Get the campaign's informations."
    put:
      summary: Update campaign
      tags:
        - campaigns
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Campaign.v1.yaml
        '401':
          description: Unauthorized
      operationId: update-campaign
      description: "Update the campaign's information."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                content_limit:
                  type: string
                display_duration:
                  type: string
                start_date:
                  type: string
                end_date:
                  type: string
    delete:
      summary: Delete a campaign
      tags:
        - campaigns
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: delete-campaign
      description: 'Delete the campaign and its associated schedules. '
  '/campaigns/{campaign-id}/locations':
    parameters:
      - schema:
          type: string
        name: campaign-id
        in: path
        required: true
    get:
      summary: "List campaign's locations"
      tags:
        - campaigns
        - location
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: List of locations
                items:
                  $ref: ../models/Location.v1.yaml
        '401':
          description: Unauthorized
      operationId: get-campaign-locations
      description: List all locations of the campaign.
    post:
      summary: Add a location to a campaign
      tags:
        - campaigns
        - location
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: post-campaign-location
      description: Add a location to the campaign.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: integer
              required:
                - location
        description: ''
    delete:
      summary: Remove a location from a campaign
      tags:
        - campaigns
        - location
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: delete-campaign-location
      description: Remove a location from the campaign.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: integer
              required:
                - location
  '/campaigns/{campaign-id}/schedules':
    parameters:
      - schema:
          type: string
        name: campaign-id
        in: path
        required: true
    get:
      summary: "Get campaign's schedules"
      tags:
        - campaigns
        - schedules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Schedule.v1.yaml
        '401':
          description: Unauthorized
      operationId: get-campaign-schedules
      description: Gives all the schedules of the campaign.
    post:
      summary: Create a new schedule for the campaign
      tags:
        - campaigns
        - schedules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Schedule.v1.yaml
        '401':
          description: Unauthorized
      operationId: post-campaign-schedule
      description: Create a new schedule for the campaign.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: integer
              required:
                - content
  '/campaigns/{campaign-id}/shares':
    parameters:
      - schema:
          type: string
        name: campaign-id
        in: path
        required: true
    get:
      summary: Get a campaign shares
      tags:
        - campaigns
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/User.v1.yaml
        '401':
          description: Unauthorized
      operationId: get-campaign-shares
      description: List all the users and groups with whom this campaign is shared.
    post:
      summary: Share the campaign
      tags:
        - campaigns
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: post-campaign-share
      description: Share the campaign with an additional user or group.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: integer
              required:
                - user
        description: ''
    delete:
      summary: Remove a share
      tags:
        - campaigns
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: delete-campaign-share
      description: Stop sharing the campaign with a user or group.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: integer
                  description: ID of the user/group with whom to stop sharing.
              required:
                - user
  '/schedules/{schedule-id}':
    parameters:
      - schema:
          type: string
        name: schedule-id
        in: path
        required: true
    get:
      summary: Get a Schedule info
      tags:
        - schedules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Schedule.v1.yaml
      operationId: get-schedule
      description: Gives the schedule infos.
    put:
      summary: Update a Schedule infos
      tags:
        - schedules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Schedule.v1.yaml
      operationId: update-schedule
      description: Updates the schedule infos.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start-date:
                  type: string
                end-date:
                  type: string
    delete:
      summary: Delete a Schedule
      tags:
        - schedules
      responses:
        '200':
          description: OK
      operationId: delete-schedule
      description: Deletes the schedule.
  '/schedules/{schedule-id}/reviews':
    parameters:
      - schema:
          type: string
        name: schedule-id
        in: path
        required: true
    get:
      summary: Get a Schedule reviews
      tags:
        - schedules
        - reviews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Review.v1.yaml
      operationId: get-schedule-reviews
      description: "Lists all the schedule's reviews."
    post:
      summary: Add a review to a Schedule
      tags:
        - schedules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Review.v1.yaml
      operationId: post-schedule-review
      description: Inserts a new review for the schedule.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                approved:
                  type: boolean
                  description: 'True if approved, False otherwise'
                comment:
                  type: string
                  description: ''
              required:
                - approved
                - comment
  /libraries:
    get:
      summary: List all libraries
      tags:
        - libraries
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Library.v1.yaml
        '401':
          description: Unauthorized
      operationId: get-libraries
      description: List all the available libraries.
    post:
      summary: Create a new library
      tags:
        - libraries
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Library.v1.yaml
        '401':
          description: Unauthorized
      operationId: post-library
      description: Create a new library.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                content_limit:
                  type: integer
                  minimum: 0
                  exclusiveMinimum: true
        description: ''
  '/libraries/{library-id}':
    parameters:
      - schema:
          type: string
        name: library-id
        in: path
        required: true
    get:
      summary: Get a library infos
      tags:
        - libraries
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Library.v1.yaml
      operationId: get-library
      description: Gives the library infos.
      parameters: []
    put:
      summary: Update a library infos
      tags:
        - libraries
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Library.v1.yaml
      operationId: update-library
      description: Updates the library information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                content_limit:
                  type: integer
                  exclusiveMinimum: true
                  minimum: 0
    delete:
      summary: Delete a library
      tags:
        - libraries
      responses:
        '200':
          description: OK
      operationId: delete-library
      description: 'Deletes the library and all the contents inside of it. If some of the contents are scheduled, these will also be removed.'
  '/libraries/{library-id}/shares':
    parameters:
      - schema:
          type: string
        name: library-id
        in: path
        required: true
    get:
      summary: Get a library shares
      tags:
        - libraries
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/User.v1.yaml
      operationId: get-library-shares
      description: Lists all users and groups with whom the library is shared.
    post:
      summary: Share a library
      tags:
        - libraries
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/User.v1.yaml
      operationId: post-library-share
      description: Shares the library with an additional user or group.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: integer
    delete:
      summary: Stop sharing a library
      tags:
        - libraries
        - users
      responses:
        '200':
          description: OK
      operationId: delete-library-share
      description: Ends sharing the library with a user or group.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: integer
  '/libraries/{library-id}/contents':
    parameters:
      - schema:
          type: string
        name: library-id
        in: path
        required: true
    get:
      summary: Get a library contents
      tags:
        - libraries
        - contents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Content.v1.yaml
      operationId: get-library-content
      description: Lists all contents in the library.
      parameters:
        - schema:
            type: integer
          in: query
          name: format
          description: filter the returned collection by a specific format
    post:
      summary: Create a new content in the library
      tags:
        - libraries
        - contents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Content.v1.yaml
      operationId: post-library-content
      description: 'Adds a new, empty, piece of content in the library.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  type: integer
                  description: Format ID for the new content
  '/contents/{content-id}':
    parameters:
      - schema:
          type: string
        name: content-id
        in: path
        required: true
    get:
      summary: Get a piece of content
      tags:
        - contents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Content.v1.yaml
        '401':
          description: Unauthorized
      operationId: get-content
      description: Gives information on a piece of content.
    put:
      summary: Update a content information
      tags:
        - contents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Content.v1.yaml
        '401':
          description: Unauthorized
      operationId: update-content
      description: Updates the content information.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                scheduling_duration:
                  type: number
                scheduling_times:
                  type: number
    delete:
      summary: Delete a piece of content
      tags:
        - contents
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: delete-content
      description: 'Deletes the content. If it is scheduled somewheres, these will also be removed.'
    post:
      summary: Add a creative
      tags:
        - contents
        - creatives
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Creative.v1.yaml
        '201':
          description: Created
        '401':
          description: Unauthorized
      operationId: post-content-creative
      description: Adds a creative to the content.
      parameters:
        - schema:
            type: integer
          in: query
          name: frame
          description: ID of the frame on which to add the creative
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
  '/contents/{content-id}/schedules':
    parameters:
      - schema:
          type: string
        name: content-id
        in: path
        required: true
        description: ID of a piece of content
    get:
      summary: "List a content's schedules"
      tags:
        - contents
        - schedules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Schedule.v1.yaml
        '401':
          description: Unauthorized
      operationId: get-content-schedules
      description: List all schedules of the content
    post:
      summary: Schedule a piece of content
      tags:
        - schedules
        - contents
        - campaigns
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Schedule.v1.yaml
        '401':
          description: Unauthorized
      operationId: post-content-schedule
      description: "Schedule the content in a campaign. \nThe content is scheduled with default dates which are usually the current date and the end of the campaign but a specific scheduling duration of the content will override this if applicable."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign:
                  type: integer
                  description: ID of the campaign in which to schedule the piece of content
              required:
                - campaign
  '/creatives/{creative-id}':
    parameters:
      - schema:
          type: string
        name: creative-id
        in: path
        required: true
    delete:
      summary: Delete a creative
      tags:
        - creatives
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
      operationId: delete-creative
      description: Deletes the creative.
components:
  securitySchemes:
    neo-auth-sso-token:
      type: http
      scheme: bearer
      description: API Token given by the Neo Auth API
tags:
  - name: campaigns
  - name: location
  - name: schedules
  - name: libraries
  - name: contents
  - name: users
  - name: creatives
  - name: reviews
security:
  - neo-auth-sso-token: []
